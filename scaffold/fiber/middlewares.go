package fiber

import (
	"fmt"
	"os"
	"strings"
)

const authMiddlewareFileTemplate = `// This file is auto generated by polygo
package middlewares

import (
	"strings"

	"${moduleName}/models"
	"${moduleName}/repositories"
	"${moduleName}/utils"
	"github.com/gofiber/fiber/v2"
)

type AuthMiddleware struct {
	uRepo repositories.IUserRepo
}

func NewAuthMiddleware(uRepo repositories.IUserRepo) *AuthMiddleware {
	return &AuthMiddleware{
		uRepo: uRepo,
	}
}

func (m *AuthMiddleware) ProtectedAPI(c *fiber.Ctx) error {
	token := c.Get("Authorization")
	idToken := strings.TrimSpace(strings.Replace(token, "Bearer", "", 1))
	claims, err := utils.ParseToken(idToken)
	if err != nil {
		return c.Status(fiber.StatusUnauthorized).JSON(models.NewJSONResponse(err, ""))
	}

	c.Locals("userId", claims["userId"])
	return c.Next()
}
`

func (fp FiberProject) createMiddlewareFiles() error {
	authMidllewareFileBody := strings.ReplaceAll(authMiddlewareFileTemplate, "${moduleName}", fp.ModuleName)

	if err := os.Mkdir(fmt.Sprintf("%s/middlewares", fp.ModuleName), 0755); err != nil {
		return err
	}

	return os.WriteFile(fmt.Sprintf("%s/middlewares/auth.middleware.go", fp.ModuleName), []byte(authMidllewareFileBody), 0644)
}
